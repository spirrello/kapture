---
apiVersion: v1
kind: Namespace
metadata:
  name: kcapture
  labels:
    name: kcapture
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kcapture
  namespace: kcapture
  labels:
    kubernetes.io/cluster-service: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kcapture-api
  namespace: kcapture
  labels:
    app: kcapture
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kcapture-api
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kcapture
    spec:
      serviceAccountName: kcapture
      containers:
      - name: kcapture
        image: registry-ci.at4d.liacloud.com/devops/kcapture-api:0.1.0
      resources:
      requests:
        memory: "128i"
        cpu: "250m"
      limits:
        memory: "256Mi"
        cpu: "500m"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kcapture
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kcapture
  labels:
    kubernetes.io/cluster-service: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kcapture
subjects:
- kind: ServiceAccount
  name: kcapture
  namespace: kcapture
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kcapture-node
  namespace: kcapture
  labels:
    k8s-app: kcapture-node
spec:
  selector:
    matchLabels:
      name: kcapture-node
  template:
    metadata:
      labels:
        name: kcapture-node
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: kcapture-node
        image: registry-ci.at4d.liacloud.com/devops/kcapture-node:0.1.0
        resources:
          limits:
            memory: "256Mi"
            cpu: "200m"
          requests:
            cpu: "100m"
            memory: "128Mi"
      terminationGracePeriodSeconds: 5
